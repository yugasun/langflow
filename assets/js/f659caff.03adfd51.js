"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[4417],{1280:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var s=t(4848),r=t(8453);const o={title:"Dynamic agent",sidebar_position:7,slug:"/starter-projects-dynamic-agent"},i=void 0,a={id:"Starter-Projects/starter-projects-dynamic-agent",title:"Dynamic agent",description:"Build a Dynamic Agent flow for an agentic application using the CrewAI.",source:"@site/docs/Starter-Projects/starter-projects-dynamic-agent.md",sourceDirName:"Starter-Projects",slug:"/starter-projects-dynamic-agent",permalink:"/starter-projects-dynamic-agent",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{title:"Dynamic agent",sidebar_position:7,slug:"/starter-projects-dynamic-agent"},sidebar:"defaultSidebar",previous:{title:"Simple agent",permalink:"/starter-projects-simple-agent"},next:{title:"Travel planning agent",permalink:"/starter-projects-travel-planning-agent"}},c={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Open Langflow and start a new project",id:"open-langflow-and-start-a-new-project",level:2},{value:"Run the Dynamic Agent flow",id:"run-the-dynamic-agent-flow",level:2}];function h(e){const n={a:"a",h2:"h2",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.p,{children:["Build a ",(0,s.jsx)(n.strong,{children:"Dynamic Agent"})," flow for an agentic application using the CrewAI."]}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.strong,{children:"agent"}),' uses an LLM as its "brain" to reason through tasks and select among the connected tools to complete them.']}),"\n",(0,s.jsxs)(n.p,{children:["This flow uses ",(0,s.jsx)(n.a,{href:"https://docs.crewai.com/",children:"CrewAI"})," to manage a ",(0,s.jsx)(n.a,{href:"https://docs.crewai.com/how-to/Hierarchical/",children:"Hierarchical crew"})," of ",(0,s.jsx)(n.strong,{children:"Agents"})," as they perform a sequence of ",(0,s.jsx)(n.strong,{children:"Tasks"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["CrewAI agents have ",(0,s.jsx)(n.strong,{children:"Roles"}),", ",(0,s.jsx)(n.strong,{children:"Goals"}),", and ",(0,s.jsx)(n.strong,{children:"Backstories"})," that define their behavior and interactions with other agents. Agents in a Hierarchical Crew are managed by a single agent with a ",(0,s.jsx)(n.strong,{children:"Manager"})," role, which is connected to an ",(0,s.jsx)(n.strong,{children:"Open AI"})," LLM component to reason through the tasks and select the appropriate tools to complete them."]}),"\n",(0,s.jsxs)(n.p,{children:['This flow is "dynamic" because it uses the ',(0,s.jsx)(n.strong,{children:"Chat input"})," component's text to define a CrewAI agent's Role, Goal, and Backstory. The created agent then uses the connected tools to research and complete the ",(0,s.jsx)(n.strong,{children:"Task"})," created from the ",(0,s.jsx)(n.strong,{children:"Chat input"})," component."]}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["To use this flow, you need an ",(0,s.jsx)(n.a,{href:"https://platform.openai.com/",children:"OpenAI API key"})," and a ",(0,s.jsx)(n.a,{href:"https://www.searchapi.io/",children:"Search API key"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"open-langflow-and-start-a-new-project",children:"Open Langflow and start a new project"}),"\n",(0,s.jsxs)(n.p,{children:["Click ",(0,s.jsx)(n.strong,{children:"New Project"}),", and then select the ",(0,s.jsx)(n.strong,{children:"Dynamic Agent"})," project."]}),"\n",(0,s.jsx)(n.p,{children:"This opens a starter project with the necessary components to run an agentic application using CrewAI."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Dynamic Agent"})," flow consists of these components:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Chat Input"})," component accepts user input to the chat."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Prompt"})," component combines the user input with a user-defined prompt."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"OpenAI"})," model component sends the user input and prompt to the OpenAI API and receives a response."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Chat Output"})," component prints the flow's output to the chat."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"CrewAI Agent"})," component is an autonomous unit programmed to perform tasks, make decisions, and communicate with other agents."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Crew AI Crew"})," component represents a collaborative group of agents working together to achieve a set of tasks. This Crew can manage work ",(0,s.jsx)(n.strong,{children:"sequentially"})," or ",(0,s.jsx)(n.strong,{children:"hierarchically"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Crew AI Task"})," component is a specific assignment to be completed by agents.\nThis task can be ",(0,s.jsx)(n.strong,{children:"sequential"})," or ",(0,s.jsx)(n.strong,{children:"hierarchical"})," depending on the Crew's configuration."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"SearchAPI"})," tool performs web searches using the ",(0,s.jsx)(n.strong,{children:"SearchAPI.io"})," API."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Yahoo Finance News Tool"})," component creates a tool for retrieving news from Yahoo Finance."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"run-the-dynamic-agent-flow",children:"Run the Dynamic Agent flow"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Add your credentials to the OpenAI and SearchAPI components using Langflow's Global Variables:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Settings"}),", then ",(0,s.jsx)(n.strong,{children:"Global Variables"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Add New"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Name your variable and paste your API key in the ",(0,s.jsx)(n.strong,{children:"Value"})," field."]}),"\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.strong,{children:"Apply To Fields"})," field, select the field to apply this variable to."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Save Variable"}),"."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["In the ",(0,s.jsx)(n.strong,{children:"Chat output"})," component, click \u25b6\ufe0f Play to start the end-to-end application flow.\nA ",(0,s.jsx)(n.strong,{children:"Chat output built successfully"})," message and a \u2705 Check on all components indicate that the flow ran successfully."]}),"\n",(0,s.jsxs)(n.li,{children:["Click ",(0,s.jsx)(n.strong,{children:"Playground"})," to start a chat session.\nYou should receive a detailed, helpful answer to the question defined in the ",(0,s.jsx)(n.strong,{children:"Chat input"})," component."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Now that your query has completed the journey from ",(0,s.jsx)(n.strong,{children:"Chat input"})," to ",(0,s.jsx)(n.strong,{children:"Chat output"}),", you have completed the ",(0,s.jsx)(n.strong,{children:"Dynamic Agent"})," flow."]})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var s=t(6540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);